{"ast":null,"code":"var _jsxFileName = \"/Users/michaelli/Desktop/react-material-ui-login/src/components/Login.tsx\";\nimport React, { useReducer, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nconst logo = require('../logo.png');\n\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n})); //state type\n\nconst initialState = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setUsername':\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'setPassword':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'setIsButtonDisabled':\n      return { ...state,\n        isButtonDisabled: action.payload\n      };\n\n    case 'loginSuccess':\n      return { ...state,\n        helperText: action.payload,\n        isError: false\n      };\n\n    case 'loginFailed':\n      return { ...state,\n        helperText: action.payload,\n        isError: true\n      };\n\n    case 'setIsError':\n      return { ...state,\n        isError: action.payload\n      };\n  }\n};\n\nconst Login = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'abc@email.com' && state.password === 'password') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully'\n      });\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect username or password'\n      });\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange = event => {\n    dispatch({\n      type: 'setUsername',\n      payload: event.target.value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    dispatch({\n      type: 'setPassword',\n      payload: event.target.value\n    });\n  }; // display: 'flex', justify-content: 'center', align-items: 'center'\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"horizontalCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"logo\",\n    style: {\n      width: 100\n    },\n    src: String(logo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: state.isError,\n    fullWidth: true,\n    id: \"username\",\n    type: \"email\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    margin: \"normal\",\n    onChange: handleUsernameChange,\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: state.isError,\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    helperText: state.helperText,\n    onChange: handlePasswordChange,\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.loginBtn,\n    onClick: handleLogin,\n    disabled: state.isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/michaelli/Desktop/react-material-ui-login/src/components/Login.tsx"],"names":["React","useReducer","useEffect","createStyles","makeStyles","TextField","CardContent","CardActions","Button","logo","require","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","dispatch","trim","handleLogin","handleKeyPress","event","keyCode","which","handleUsernameChange","target","value","handlePasswordChange","String"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\nimport { FullscreenExit } from '@material-ui/icons';\n\nconst logo = require('../logo.png');\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 400,\n      margin: `${theme.spacing(0)} auto`\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1\n    },\n    header: {\n      textAlign: 'center',\n      background: '#212121',\n      color: '#fff'\n    },\n    card: {\n      marginTop: theme.spacing(10)\n    }\n  })\n);\n\n//state type\n\ntype State = {\n  username: string\n  password: string\n  isButtonDisabled: boolean\n  helperText: string\n  isError: boolean\n};\n\nconst initialState: State = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n  | { type: 'setPassword', payload: string }\n  | { type: 'setIsButtonDisabled', payload: boolean }\n  | { type: 'loginSuccess', payload: string }\n  | { type: 'loginFailed', payload: string }\n  | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'setUsername':\n      return {\n        ...state,\n        username: action.payload\n      };\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload\n      };\n    case 'setIsButtonDisabled':\n      return {\n        ...state,\n        isButtonDisabled: action.payload\n      };\n    case 'loginSuccess':\n      return {\n        ...state,\n        helperText: action.payload,\n        isError: false\n      };\n    case 'loginFailed':\n      return {\n        ...state,\n        helperText: action.payload,\n        isError: true\n      };\n    case 'setIsError':\n      return {\n        ...state,\n        isError: action.payload\n      };\n  }\n}\n\nconst Login = () => {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'abc@email.com' && state.password === 'password') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'Login Successfully'\n      });\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect username or password'\n      });\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setUsername',\n        payload: event.target.value\n      });\n    };\n\n  const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> =\n    (event) => {\n      dispatch({\n        type: 'setPassword',\n        payload: event.target.value\n      });\n    }\n\n  // display: 'flex', justify-content: 'center', align-items: 'center'\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      {/* <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"Login App\" /> */}\n      <div className=\"horizontalCenter\">\n        <img alt='logo' style={{ width: 100 }} src={String(logo)} />\n      </div>\n      <CardContent>\n        <div>\n          <TextField\n            error={state.isError}\n            fullWidth\n            id=\"username\"\n            type=\"email\"\n            label=\"Username\"\n            placeholder=\"Username\"\n            margin=\"normal\"\n            onChange={handleUsernameChange}\n            onKeyPress={handleKeyPress}\n          />\n          <TextField\n            error={state.isError}\n            fullWidth\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            placeholder=\"Password\"\n            margin=\"normal\"\n            helperText={state.helperText}\n            onChange={handlePasswordChange}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          className={classes.loginBtn}\n          onClick={handleLogin}\n          disabled={state.isButtonDisabled}>\n          Login\n        </Button>\n      </CardActions>\n      {/* </Card> */}\n    </form >\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}